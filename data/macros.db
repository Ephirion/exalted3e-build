{"folder":"CpRJCiKLAVNRrtvE","name":"Resisting the Lure of Madness","type":"script","author":"vfXXFo7RKBqUZ1bk","img":"icons/svg/dice-target.svg","scope":"global","command":"let {results, roll, total} = rollResult;\n\nif(total >= this.object.difficulty) {\n    if(this.object.addedCharms.find(item => item.name === this.object.currentMacroCharm.name)) {\n        this.object.restore.willpower++;\n        this.object.macroMessages += 'Resisting the Lure of Madness recovered 1wp.';\n    }\n};\n\nreturn {results, roll, total};","sort":0,"ownership":{"default":0,"vfXXFo7RKBqUZ1bk":3},"flags":{"scene-packer":{"hash":"572c4eec1646fb6dbcd5da49bc75c22055113521"},"macro-wheel":{"activeCondition":""}},"_stats":{"systemId":"exaltedthird","systemVersion":"1.11.4","coreVersion":"10.291","createdTime":1682682829527,"modifiedTime":1682682832223,"lastModifiedBy":"vfXXFo7RKBqUZ1bk"},"_id":"4P63C6zjo01IwEgJ"}
{"folder":"d1vnKbt1sDN9RZoy","name":"End Scene","type":"script","author":"vfXXFo7RKBqUZ1bk","img":"icons/svg/dice-target.svg","scope":"global","command":"//This macro will stop \"End Scene\" charms for\n//any tokens on the current scene\n    const tokens = canvas.scene.tokens;\n    for(const token of tokens) {\n      if(token.actor) {\n        const actorData = duplicate(token.actor);\n        const endSceneCharms = token.actor.items.filter((item) => item.type === 'charm' && item.system.active && item.system.endtrigger === 'endscene');\n        for (const charm of endSceneCharms) {\n          charm.update({\n            [`system.active`]: false,\n          });\n          if (actorData.system.settings.charmmotepool === 'personal') {\n            if (charm.system.cost.commitmotes > 0) {\n              actorData.system.motes.personal.committed -= charm.system.cost.commitmotes;\n            }\n          }\n          else {\n            if (charm.system.cost.commitmotes > 0) {\n              actorData.system.motes.peripheral.committed -= charm.system.cost.commitmotes;\n            }\n          }\n          for (var effect of token.actor.effects.filter((effect => effect._sourceName === charm.name))) {\n            effect.update({ disabled: true });\n          }\n        }\n        token.actor.update(actorData);\n      }\n    }","sort":0,"ownership":{"default":0,"vfXXFo7RKBqUZ1bk":3},"flags":{"scene-packer":{"hash":"3e094fa1c6fff4d71c1b7e81599484fae4fecb92"},"macro-wheel":{"activeCondition":""}},"_stats":{"systemId":"exaltedthird","systemVersion":"1.11.4","coreVersion":"10.291","createdTime":1682682675878,"modifiedTime":1682682679615,"lastModifiedBy":"vfXXFo7RKBqUZ1bk"},"_id":"EtFko0yiI9hda7Ry"}
{"folder":"d1vnKbt1sDN9RZoy","name":"Give EXP","type":"script","author":"vfXXFo7RKBqUZ1bk","img":"icons/svg/dice-target.svg","scope":"global","command":"const actors = game.users.players.filter(c => c.character && c.character.type === 'character').map(u => u.character);\n  new Dialog({\n    title: 'Give Experience',\n    content: `\n<form class=\"noflex\" autocomplete=\"off\">\n<div class=\"settings-list\">\n    <div class=\"form-group\">\n        <label class=\"resource-label\">Standard XP</label>\n        <div class=\"form-fields\">\n          <input type=\"number\" name=\"standard\" value=\"5\" min=\"0\" max=\"99\"/>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Exalt XP</label>\n      <div class=\"form-fields\">\n          <input type=\"number\" name=\"exalt\" value=\"0\" min=\"0\" max=\"99\"/>\n      </div>\n    </div>\n</div>\n</form>`,\n    buttons: {\n      no: {\n        icon: \"<i class='fas fa-times'></i>\",\n        label: 'Cancel'\n      },\n      yes: {\n        icon: \"<i class='fas fa-check'></i>\",\n        label: 'Yes',\n        callback: (html) => {\n          const standard = html.find('input[name=\"standard\"]')[0]?.value || null;\n          const exalt = html.find('input[name=\"exalt\"]')[0]?.value || null;\n\n          if (standard || exalt) {\n            actors.forEach((actor) => {\n              const newStandardTotal = (parseInt(actor.system.experience.standard.total) || 0) + parseInt(standard || 0);\n              const newExaltTotal = (parseInt(actor.system.experience.exalt.total) || 0) + parseInt(exalt || 0);\n              const newStandardValue = (parseInt(actor.system.experience.standard.value) || 0) + parseInt(standard || 0);\n              const newExaltValue = (parseInt(actor.system.experience.exalt.value) || 0) + parseInt(exalt || 0);\n              actor.update({ \"system.experience.standard.total\": Math.ceil(newStandardTotal), \"system.experience.standard.value\": Math.ceil(newStandardValue), \"system.experience.exalt.total\" : Math.ceil(newExaltTotal), \"system.experience.exalt.value\": Math.ceil(newExaltValue) });\n            });\n          }\n\n          ui.notifications.info('Gave out XP points');\n        }\n      },\n    },\n    default: \"no\"\n  }).render(true);","sort":100000,"ownership":{"default":0,"vfXXFo7RKBqUZ1bk":3},"flags":{"scene-packer":{"hash":"c08882f3b9a41021364996882d46609a8fb48335"},"macro-wheel":{"activeCondition":""}},"_stats":{"systemId":"exaltedthird","systemVersion":"1.11.4","coreVersion":"10.291","createdTime":1682682611006,"modifiedTime":1682682648765,"lastModifiedBy":"vfXXFo7RKBqUZ1bk"},"_id":"KaW03jHHRkdWyXEG"}
{"folder":"CpRJCiKLAVNRrtvE","name":"Striking Mospid Method","type":"script","author":"vfXXFo7RKBqUZ1bk","img":"icons/svg/dice-target.svg","scope":"global","command":"let { results, roll, total } = rollResult;\nlet possibleRerolls = 0;\nlet rerollNumber = Math.max(3, this.actor.system.essence.value);\nfor (const diceResult of results.sort((a, b) => b.result - a.result)) {\n    if (rerollNumber > possibleRerolls && !diceResult.rerolled && diceResult.result < this.object.targetNumber && (!diceModifiers.settings.excludeOnesFromRerolls || diceResult.result !== 1)) {\n        possibleRerolls++;\n        diceResult.rerolled = true;\n    }\n}\n\nvar diceToReroll = Math.min(possibleRerolls, rerollNumber);\nlet rerolledDice = 0;\nwhile (diceToReroll > 0 && (rerolledDice < rerollNumber)) {\n    rerolledDice += possibleRerolls;\n    var rerollNumDiceResults = this._rollTheDice(diceToReroll, diceModifiers, doublesRolled, numbersRerolled);\n    diceToReroll = 0\n    for (const diceResult of rerollNumDiceResults.results.sort((a, b) => b.result - a.result)) {\n        if (rerollNumber > possibleRerolls && !diceResult.rerolled && diceResult.result < this.object.targetNumber && (!diceModifiers.settings.excludeOnesFromRerolls || diceResult.result !== 1)) {\n            possibleRerolls++;\n            diceToReroll++;\n            diceResult.rerolled = true;\n        }\n    }\n    results.push(...rerollNumDiceResults.results);\n    total += rerollNumDiceResults.total;\n}\nreturn { results, roll, total };","sort":0,"ownership":{"default":0,"vfXXFo7RKBqUZ1bk":3},"flags":{"scene-packer":{"hash":"1ae3f6ceb8059fc145ddbf88fa21c7106518f593"},"macro-wheel":{"activeCondition":""}},"_stats":{"systemId":"exaltedthird","systemVersion":"1.11.4","coreVersion":"10.291","createdTime":1682682846324,"modifiedTime":1682682849253,"lastModifiedBy":"vfXXFo7RKBqUZ1bk"},"_id":"YFszLRvRWlk8YPtD"}
{"folder":"d1vnKbt1sDN9RZoy","name":"Anima Flux","type":"script","author":"vfXXFo7RKBqUZ1bk","img":"icons/svg/dice-target.svg","scope":"global","command":"if (game.user.targets && game.user.targets.size > 0) {\n    for(const target of game.user.targets) {\n        var roll = new Roll(`1d10cs>=7`).evaluate({ async: false });\n        var total = roll.total;\n        for (let dice of roll.dice[0].results) {\n            if (dice.result >= 10) {\n                total += 1; \n            }\n        }\n        if(total > 0) {\n            if (game.combat) {\n                let combatant = game.combat.combatants.find(c => c.tokenId == target.actor.token.id);\n                if (combatant && combatant.initiative != null) {\n                    if(combatant.initiative > 0) {\n                        if(target.actor.system.hardness.value <= 0) {\n                            game.combat.setInitiative(combatant.id, combatant.initiative - total);\n                        }\n                    }\n                    else {\n                        let totalHealth = 0;\n                        const targetActorData = duplicate(target.actor);\n                        for (let [key, health_level] of Object.entries(targetActorData.system.health.levels)) {\n                            totalHealth += health_level.value;\n                        }\n                        targetActorData.system.health.lethal = Math.min(totalHealth - targetActorData.system.health.bashing - targetActorData.system.health.aggravated, targetActorData.system.health.lethal + total);\n                        if (game.user.isGM) {\n                            target.actor.update(targetActorData);\n                        }\n                        else {\n                            game.socket.emit('system.exaltedthird', {\n                                type: 'healthDamage',\n                                id: target.id,\n                                data: targetActorData.system.health,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        ChatMessage.create({ type: CONST.CHAT_MESSAGE_TYPES.ROLL, roll: roll });\n    }\n}","sort":200000,"ownership":{"default":2,"vfXXFo7RKBqUZ1bk":3},"flags":{"scene-packer":{"hash":"5590f812f928e9ba772e9690438e1526c8fa86b2"},"macro-wheel":{"activeCondition":""}},"_stats":{"systemId":"exaltedthird","systemVersion":"1.11.4","coreVersion":"10.291","createdTime":1681430919392,"modifiedTime":1682682650123,"lastModifiedBy":"vfXXFo7RKBqUZ1bk"},"_id":"d7CpyOqROE2YlX5Q"}
{"folder":"CpRJCiKLAVNRrtvE","name":"Grizzly Bear Embrace","type":"script","author":"vfXXFo7RKBqUZ1bk","img":"icons/svg/dice-target.svg","scope":"global","command":"let {results, roll, total} = rollResult;\n\nif (this.object.attackType === 'gambit') {\n    if(total >= this.object.defense) {\n        let GrappleBonus = total - this.object.defense;\n        if(this.object.characterInitiative > this.object.targetCombatant.initiative) {\n            this.object.macroMessages += `Grizzly Bear Embrace: Add ${GrappleBonus} Dice to the Control Roll`;\n        }\n    }\n}\n\nreturn {results, roll, total};","sort":0,"ownership":{"default":0,"vfXXFo7RKBqUZ1bk":3},"flags":{"scene-packer":{"hash":"43282273641192197b298d708e7941f3b2ae1344"},"macro-wheel":{"activeCondition":""}},"_stats":{"systemId":"exaltedthird","systemVersion":"1.11.4","coreVersion":"10.291","createdTime":1682682811841,"modifiedTime":1682682815125,"lastModifiedBy":"vfXXFo7RKBqUZ1bk"},"_id":"jUrlJLkRCb9RgLEy"}
